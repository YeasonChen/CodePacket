"""

原始字符串:Python中正则匹配规则前都添加r表示为原始字符串,会自动转义

.	匹配任意1个字符（除了\n）
[ ]	匹配[ ]中列举的字符
\d	匹配数字，即0-9
\D	匹配非数字，即不是数字
\s	匹配空白，即 空格，tab键
\S	匹配非空白
\w	匹配单词字符，即a-z、A-Z、0-9、_
\W	匹配非单词字符
^   取反

[0-5a-z] // 标识0到5或者a到z都可以



*	匹配前一个字符出现0次或者无限次，即可有可无
+	匹配前一个字符出现1次或者无限次，即至少有1次
?	匹配前一个字符出现1次或者0次，即要么有1次，要么没有
{m}	匹配前一个字符出现m次
{m,}	匹配前一个字符至少出现m次
{m,n}	匹配前一个字符出现从m到n次



^	匹配字符串开头
$	匹配字符串结尾
\b	匹配一个单词的边界
\B	匹配非单词边界



|	匹配左右任意一个表达式
(ab)	将括号中字符作为一个分组
\num	引用分组num匹配到的字符串
(?P<name>)	分组起别名
(?P=name)	引用别名为name分组匹配到的字符串


"""

import re


"""
会从头开始一个一个对应的匹配字符,正则匹配完成后,多余部分不处理
"""
result = re.match('...', 'abcde')  # 返回的是正则对象
result_string = result.group()  # 获取筛选后的字符串

# ret = re.search(r"\d+", "阅读数:999 次")
# print(ret.group())


ret = re.sub(r"php|objc", "python", "cpp php objc json java javascript html c python swift")
print(ret)
